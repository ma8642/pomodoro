{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","components/Dial.js","redux/selectors.js","components/Timer.js","components/Control.js","App.js","redux/reducers/index.js","redux/store.js","reportWebVitals.js","index.js"],"names":["INCREMENT","DECREMENT","START_TIMER","STOP_TIMER","TICK_TOCK","RESET","increment","dial","type","payload","decrement","tickTock","timeLeft","Dial","props","handleClick","event","target","value","title","incrementFocusTime","incrementBreakTime","decrementFocusTime","decrementBreakTime","bind","this","name","timeBlockLength","focusTime","breakTime","id","className","onClick","React","Component","connect","state","store","getFocusTime","getBreakTime","dispatch","Timer","timeBlock","currentTimeBlock","play","getTimeBlock","getTimeLeft","Control","reset","pauseBeep","started","stopTimer","startTimer","icon","getStartStop","getState","timerSelector","setInterval","clearInterval","App","playBeep","audioBeep","current","pause","currentTime","createRef","src","ref","initialState","updateTimeLeft","console","log","split","map","numStr","parseInt","minutesLeft","secondsLeft","newMinutesLeft","newSecondsLeft","pomodoroReducer","action","newTime","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAaA,EAAY,YACZC,EAAY,YACZC,EAAc,cACdC,EAAa,aACbC,EAAY,YACZC,EAAQ,QCIRC,EAAY,SAACC,GAAD,MAAW,CAElCC,KAAMR,EACNS,QAAQ,GAAD,OAAKF,EAAL,UAGIG,EAAY,SAACH,GAAD,MAAW,CAElCC,KAAMP,EACNQ,QAAQ,GAAD,OAAKF,EAAL,UA0BII,EAAW,SAACC,GAAD,MAAe,CACrCJ,KAAMJ,EACNK,QAASG,I,OCzCLC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,YAAc,SAACC,GAED,MADFA,EAAMC,OAAOC,MAEI,YAArB,EAAKJ,MAAMK,MACb,EAAKL,MAAMM,qBAEX,EAAKN,MAAMO,qBAGY,YAArB,EAAKP,MAAMK,MACb,EAAKL,MAAMQ,qBAEX,EAAKR,MAAMS,sBAff,EAAKR,YAAc,EAAKA,YAAYS,KAAjB,gBAFF,E,0CAqBnB,WACE,IAAIL,EAAQM,KAAKX,MAAMK,MACnBO,EAA4B,YAArBD,KAAKX,MAAMK,MAAsB,QAAU,QAClDQ,EACmB,YAArBF,KAAKX,MAAMK,MACPM,KAAKX,MAAMc,UACXH,KAAKX,MAAMe,UAEjB,OACE,sBACEC,GAAE,UAAKX,EAAL,aACFY,UAAU,6CAFZ,UAIE,sBAAKD,GAAE,UAAKX,EAAL,UAAoBY,UAAU,SAArC,UACGL,EADH,WAGA,sBAAKK,UAAU,qCAAf,UACE,wBACED,GAAE,UAAKX,EAAL,cACFY,UAAU,MACVb,MAAM,IACNc,QAASP,KAAKV,YAJhB,eAQA,qBAAKe,GAAE,UAAKX,EAAL,WAAP,SAA6BQ,IAC7B,wBACEG,GAAE,UAAKX,EAAL,cACFY,UAAU,MACVb,MAAM,IACNc,QAASP,KAAKV,YAJhB,yB,GAhDSkB,IAAMC,WA6EVC,eAfS,SAACC,GAGvB,MAAO,CAAER,UCtEiB,SAACS,GAAD,OAAWA,EAAMT,UDoEzBU,CAAaF,GAEXP,UCrEM,SAACQ,GAAD,OAAWA,EAAMR,UDoEzBU,CAAaH,OAIN,SAACI,GAC1B,MAAO,CACLpB,mBAAoB,kBAAMoB,EAASlC,EAAU,WAC7Ce,mBAAoB,kBAAMmB,EAASlC,EAAU,WAC7CgB,mBAAoB,kBAAMkB,EAAS9B,EAAU,WAC7Ca,mBAAoB,kBAAMiB,EAAS9B,EAAU,cAIlCyB,CAA6CtB,GE9EtD4B,E,4JACJ,WACE,IAAIC,EAC8B,cAAhCjB,KAAKX,MAAM6B,iBAAmC,QAAU,QAK1D,MAJ4B,UAAxBlB,KAAKX,MAAMF,UACba,KAAKX,MAAM8B,OAIX,sBAAKd,GAAG,YAAYC,UAAU,wCAA9B,UAOE,uBAAOD,GAAG,cAAV,SAAyBY,IACzB,qBAAKZ,GAAG,YAAR,SAAqBL,KAAKX,MAAMF,kB,GAjBpBqB,IAAMC,WA6BXC,eANS,SAACC,GAGvB,MAAO,CAAEO,iBD1BiB,SAACN,GAAD,OAAWA,EAAMK,UCwBlBG,CAAaT,GAEXxB,SD3BF,SAACyB,GAAD,OAAWA,EAAMzB,SC0BzBkC,CAAYV,MAIhBD,CAAyBM,GC5BlCM,E,kDACJ,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,YAAc,WACY,UAApB,EAAKD,MAAMN,MACb,EAAKM,MAAMkC,QACX,EAAKlC,MAAMmC,cAEgB,IAAvB,EAAKnC,MAAMoC,SACb,EAAKpC,MAAMqC,YACX,EAAKrC,MAAMmC,aAEX,EAAKnC,MAAMsC,cAZf,EAAKrC,YAAc,EAAKA,YAAYS,KAAjB,gBAFF,E,0CAmBnB,WACE,IAAI6B,EAA2B,UAApB5B,KAAKX,MAAMN,KAAmB,WAAa,OAItD,OAH2B,IAAvBiB,KAAKX,MAAMoC,SAA6B,SAATG,IACjCA,EAAO,SAGP,wBAAQvB,GAAIL,KAAKX,MAAMN,KAAMuB,UAAU,MAAMC,QAASP,KAAKV,YAA3D,SACE,mBAAGgB,UAAS,iBAAYsB,W,GA3BVpB,IAAMC,WA6CbC,eAZS,SAACC,GAEvB,MAAO,CAAEc,QFtCiB,SAACb,GAAD,OAAWA,EAAMa,QEqC3BI,CAAalB,OAIJ,SAACI,GAC1B,MAAO,CACLY,WAAY,kBAAMZ,GJvBb,SAACA,EAAUe,GAChB,IAAMC,EAAgBC,aAAY,WAChCjB,EAAS7B,OACR,KACH6B,EAAS,CACPhC,KAAMN,EACNO,QAAS8C,IAAW3C,SACpB4C,sBIiBFL,UAAW,kBAAMX,GJXZ,SAACA,EAAUe,GAChBf,EAAS,CACPhC,KAAML,IAGRuD,cAAcH,IAAWC,mBIOzBR,MAAO,kBAAMR,GJGR,SAACA,EAAUe,GAChBf,EAAS,CACPhC,KAAMH,IAGRqD,cAAcH,IAAWC,sBILdrB,CAA6CY,GCY7CY,G,wDAvDb,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAMR8C,SAAW,WACT,EAAKC,UAAUC,QAAQlB,QARN,EAWnBK,UAAY,WACV,EAAKY,UAAUC,QAAQC,QACvB,EAAKF,UAAUC,QAAQE,YAAc,GAXrC,EAAKH,UAAY5B,IAAMgC,YACvB,EAAKL,SAAW,EAAKA,SAASpC,KAAd,gBAChB,EAAKyB,UAAY,EAAKA,UAAUzB,KAAf,gBAJA,E,0CAgBnB,WACE,OACE,sBACEM,GAAG,gBACHC,UAAU,4CAFZ,UAIE,uBACED,GAAG,OACHoC,IAAI,4GACJ1D,KAAK,YACL2D,IAAK1C,KAAKoC,YAEZ,qBACE/B,GAAG,YACHC,UAAU,iDAFZ,SAIE,6DAEF,sBACED,GAAG,WACHC,UAAU,+DAFZ,UAIE,sBAAKD,GAAG,kBAAR,UACE,cAAC,EAAD,CAAOc,KAAMnB,KAAKmC,WAClB,sBAAK9B,GAAG,YAAYC,UAAU,qBAA9B,UACE,cAAC,EAAD,CAAMZ,MAAM,YACZ,cAAC,EAAD,CAAMA,MAAM,gBAGhB,sBAAKY,UAAU,gCAAf,UACE,cAAC,EAAD,CAASvB,KAAK,aAAayC,UAAWxB,KAAKwB,YAC3C,cAAC,EAAD,CAASzC,KAAK,QAAQyC,UAAWxB,KAAKwB,yB,GAhDhChB,IAAMC,Y,+BCGlBkC,EAAe,CACnBlB,SAAS,EACTtB,UAAW,GACXC,UAAW,EACXa,UAAW,YACX9B,SAAU,QACV4C,cAAe,MAGXa,EAAiB,SAAC7D,EAAMkC,EAAWN,GAGvC,GAFAkC,QAAQC,IAAI,uBAEW,UAAnBnC,EAAMxB,SACR,OAAIwB,EAAMM,GAAa,GACf,IAAN,OAAWN,EAAMM,GAAjB,OAEM,GAAN,OAAUN,EAAMM,GAAhB,OAGJ,GAAIN,EAAMM,YAAcA,EAAW,CACjC,IAAI9B,EAAWwB,EAAMxB,SACrB0D,QAAQC,IAAI3D,GACZ,MAAiCA,EAC9B4D,MAAM,KACNC,KAAI,SAACC,GAAD,OAAYC,SAASD,MAF5B,mBAAKE,EAAL,KAAkBC,EAAlB,KAGa,WAATrE,EACFoE,GAAe,EACG,WAATpE,EACToE,GAAe,EACG,WAATpE,IACTqE,GAAe,EACfP,QAAQC,IAAI,gBAAiBM,IAG/B,IAAKC,EAAmC,GAAnBC,EAAuB,GAgB5C,OAdED,EADEF,EAAc,GACF,WAAOA,GAEP,UAAMA,IAGD,IAAjBC,GACFC,EAAiBF,EAAc,EAC/BG,EAAiB,IAEjBA,EADSF,EAAc,GACT,WAAOA,GAEP,UAAMA,GAEtBjE,EAAQ,UAAMkE,EAAN,YAAwBC,GAIlC,OAAO3C,EAAMxB,UAsFAoE,EAnFS,WAAmC,IAAlC5C,EAAiC,uDAAzBgC,EAAca,EAAW,uCAExD,OADAX,QAAQC,IAAInC,GACJ6C,EAAOzE,MACb,KAAKR,EAEH,GADAsE,QAAQC,IAAR,oBAAyBU,EAAOxE,UAC5B2B,EAAM6C,EAAOxE,SAAW,GAAI,CAC9B,IAAIyE,EAAU9C,EAAM6C,EAAOxE,SAAW,EAClCG,EAAWyD,EAAe,SAAUY,EAAOxE,QAAS2B,GACxD,MAAuB,cAAnB6C,EAAOxE,QACF,2BACF2B,GADL,IAEER,UAAWsD,EACXtE,aAGG,2BACFwB,GADL,IAEEP,UAAWqD,EACXtE,aAGJ,OAAO,eAAKwB,GAEd,KAAKnC,EAEH,GADAqE,QAAQC,IAAR,oBAAyBU,EAAOxE,UAC5B2B,EAAM6C,EAAOxE,SAAW,EAAG,CAC7B,IAAIyE,EAAU9C,EAAM6C,EAAOxE,SAAW,EAClCG,EAAWyD,EAAe,SAAUY,EAAOxE,QAAS2B,GACxD,MAAuB,cAAnB6C,EAAOxE,QACF,2BACF2B,GADL,IAEER,UAAWsD,EACXtE,aAGG,2BACFwB,GADL,IAEEP,UAAWqD,EACXtE,aAGJ,OAAO,eAAKwB,GAEd,KAAKlC,EACHoE,QAAQC,IAAR,0BAA+BnC,EAAMM,UAArC,MACA,IAAIc,EAAgByB,EAAOzB,cAC3B,OAAO,2BACFpB,GADL,IAEEc,SAAS,EACTM,kBAGJ,KAAKrD,EAEH,OADAmE,QAAQC,IAAR,yBAA8BnC,EAAMM,YAC7B,2BAAKN,GAAZ,IAAmBc,SAAS,IAC9B,KAAK9C,EACHkE,QAAQC,IAAR,oBAAyBU,EAAOxE,UAChC,IAAIiC,EAAYN,EAAMM,UAClB9B,EAAWyD,EAAe,SAAU3B,EAAWN,GAKnD,MAJuB,UAAnBA,EAAMxB,WACR0D,QAAQC,IAAR,yBAA8BnC,EAAMxB,WACpC8B,EAAgC,cAApBN,EAAMM,UAA4B,YAAc,aAEvD,2BAAKN,GAAZ,IAAmBM,YAAW9B,aAEhC,KAAKP,EAEH,OADAiE,QAAQC,IAAR,0BAA+BnC,EAAMM,UAArC,MACO,2BACFN,GADL,IAEEc,SAAS,EACTrB,UAAW,EACXD,UAAW,GACXc,UAAW,YACX9B,SAAU,UAGd,QAEE,OADA0D,QAAQC,IAAR,WACO,eAAKnC,KC3IH+C,cAAYH,EAAiBI,YAAgBC,MCQ7CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU5D,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ6D,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c5285bfc.chunk.js","sourcesContent":["export const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const START_TIMER = \"START_TIMER\";\nexport const STOP_TIMER = \"STOP_TIMER\";\nexport const TICK_TOCK = \"TICK_TOCK\";\nexport const RESET = \"RESET\";\n","import {\n  INCREMENT,\n  DECREMENT,\n  START_TIMER,\n  STOP_TIMER,\n  TICK_TOCK,\n  RESET,\n} from \"./actionTypes\";\n\nexport const increment = (dial) => ({\n  // dial = \"session\" or \"break\"\n  type: INCREMENT,\n  payload: `${dial}Time`,\n});\n\nexport const decrement = (dial) => ({\n  // dial = \"session\" or \"break\"\n  type: DECREMENT,\n  payload: `${dial}Time`,\n});\n\nexport const startTimer = () => {\n  return (dispatch, getState) => {\n    const timerSelector = setInterval(() => {\n      dispatch(tickTock());\n    }, 1000);\n    dispatch({\n      type: START_TIMER,\n      payload: getState().timeLeft,\n      timerSelector,\n    });\n  };\n};\n\nexport const stopTimer = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: STOP_TIMER,\n    });\n\n    clearInterval(getState().timerSelector);\n  };\n};\n\nexport const tickTock = (timeLeft) => ({\n  type: TICK_TOCK,\n  payload: timeLeft,\n});\n\nexport const reset = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: RESET,\n    });\n\n    clearInterval(getState().timerSelector);\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFocusTime, getBreakTime } from \"../redux/selectors\";\nimport { increment, decrement } from \"../redux/actions\";\n\nclass Dial extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = (event) => {\n    let val = event.target.value;\n    if (val === \"+\") {\n      if (this.props.title === \"session\") {\n        this.props.incrementFocusTime();\n      } else {\n        this.props.incrementBreakTime();\n      }\n    } else {\n      if (this.props.title === \"session\") {\n        this.props.decrementFocusTime();\n      } else {\n        this.props.decrementBreakTime();\n      }\n    }\n  };\n  render() {\n    let title = this.props.title;\n    let name = this.props.title === \"session\" ? \"Focus\" : \"Break\";\n    let timeBlockLength =\n      this.props.title === \"session\"\n        ? this.props.focusTime\n        : this.props.breakTime;\n\n    return (\n      <div\n        id={`${title}-dial-div`}\n        className=\"dial d-flex flex-column align-items-center\"\n      >\n        <div id={`${title}-label`} className=\"d-flex\">\n          {name} Time\n        </div>\n        <div className=\"d-flex flex-row align-items-center\">\n          <button\n            id={`${title}-decrement`}\n            className=\"btn\"\n            value=\"-\"\n            onClick={this.handleClick}\n          >\n            -\n          </button>\n          <div id={`${title}-length`}>{timeBlockLength}</div>\n          <button\n            id={`${title}-increment`}\n            className=\"btn\"\n            value=\"+\"\n            onClick={this.handleClick}\n          >\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const focusTime = getFocusTime(state);\n  const breakTime = getBreakTime(state);\n  return { focusTime, breakTime };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    incrementFocusTime: () => dispatch(increment(\"focus\")),\n    incrementBreakTime: () => dispatch(increment(\"break\")),\n    decrementFocusTime: () => dispatch(decrement(\"focus\")),\n    decrementBreakTime: () => dispatch(decrement(\"break\")),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dial);\n","export const getFocusTime = (store) => store.focusTime;\nexport const getBreakTime = (store) => store.breakTime;\nexport const getStartStop = (store) => store.started;\nexport const getTimeLeft = (store) => store.timeLeft;\nexport const getTimeBlock = (store) => store.timeBlock;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTimeBlock, getTimeLeft } from \"../redux/selectors\";\n\nclass Timer extends React.Component {\n  render() {\n    let timeBlock =\n      this.props.currentTimeBlock === \"focusTime\" ? \"Focus\" : \"Break\";\n    if (this.props.timeLeft === \"00:00\") {\n      this.props.play();\n    }\n\n    return (\n      <div id=\"timer-div\" className=\"d-flex flex-column align-items-center\">\n        {/* <audio\n          id=\"beep\"\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n          type=\"audio/mp3\"\n          ref={this.audioBeep}\n        ></audio> */}\n        <label id=\"timer-label\">{timeBlock}</label>\n        <div id=\"time-left\">{this.props.timeLeft}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const currentTimeBlock = getTimeBlock(state);\n  const timeLeft = getTimeLeft(state);\n  return { currentTimeBlock, timeLeft };\n};\n\nexport default connect(mapStateToProps)(Timer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getStartStop } from \"../redux/selectors\";\nimport { startTimer, stopTimer, reset } from \"../redux/actions\";\n\nclass Control extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = () => {\n    if (this.props.type === \"reset\") {\n      this.props.reset();\n      this.props.pauseBeep();\n    } else {\n      if (this.props.started === true) {\n        this.props.stopTimer();\n        this.props.pauseBeep();\n      } else {\n        this.props.startTimer();\n      }\n    }\n  };\n\n  render() {\n    let icon = this.props.type === \"reset\" ? \"undo-alt\" : \"play\";\n    if (this.props.started === true && icon === \"play\") {\n      icon = \"pause\";\n    }\n    return (\n      <button id={this.props.type} className=\"btn\" onClick={this.handleClick}>\n        <i className={`fas fa-${icon}`}></i>\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const started = getStartStop(state);\n  return { started };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startTimer: () => dispatch(startTimer()),\n    stopTimer: () => dispatch(stopTimer()),\n    reset: () => dispatch(reset()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Control);\n","import React from \"react\";\nimport Dial from \"./components/Dial\";\nimport Timer from \"./components/Timer\";\nimport Control from \"./components/Control\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.audioBeep = React.createRef();\n    this.playBeep = this.playBeep.bind(this);\n    this.pauseBeep = this.pauseBeep.bind(this);\n  }\n\n  playBeep = () => {\n    this.audioBeep.current.play();\n  };\n\n  pauseBeep = () => {\n    this.audioBeep.current.pause();\n    this.audioBeep.current.currentTime = 0; // rewind to beginning of sound\n  };\n\n  render() {\n    return (\n      <div\n        id=\"app-container\"\n        className=\"d-flex flex-column justify-content-center\"\n      >\n        <audio\n          id=\"beep\"\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n          type=\"audio/mp3\"\n          ref={this.audioBeep}\n        ></audio>\n        <div\n          id=\"app-title\"\n          className=\"d-flex justify-content-between align-items-end\"\n        >\n          <h1>P o m o d o r o T i m e r</h1>\n        </div>\n        <div\n          id=\"app-main\"\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n        >\n          <div id=\"timer-and-dials\">\n            <Timer play={this.playBeep} />\n            <div id=\"app-dials\" className=\"d-flex flex-column\">\n              <Dial title=\"session\" />\n              <Dial title=\"break\" />\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <Control type=\"start_stop\" pauseBeep={this.pauseBeep} />\n            <Control type=\"reset\" pauseBeep={this.pauseBeep} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n  INCREMENT,\n  DECREMENT,\n  START_TIMER,\n  STOP_TIMER,\n  TICK_TOCK,\n  RESET,\n} from \"../actionTypes\";\n\nconst initialState = {\n  started: false,\n  focusTime: 25,\n  breakTime: 5,\n  timeBlock: \"focusTime\",\n  timeLeft: \"25:00\",\n  timerSelector: null,\n};\n\nconst updateTimeLeft = (type, timeBlock, state) => {\n  console.log(\"Doin the damn thing\");\n  //only update timeLeft if time changing corresponds to the current timeBlock\n  if (state.timeLeft === \"00:00\") {\n    if (state[timeBlock] < 10) {\n      return `0${state[timeBlock]}:00`;\n    } else {\n      return `${state[timeBlock]}:00`;\n    }\n  }\n  if (state.timeBlock === timeBlock) {\n    let timeLeft = state.timeLeft;\n    console.log(timeLeft);\n    let [minutesLeft, secondsLeft] = timeLeft\n      .split(\":\")\n      .map((numStr) => parseInt(numStr));\n    if (type === \"addMin\") {\n      minutesLeft += 1;\n    } else if (type === \"subMin\") {\n      minutesLeft -= 1;\n    } else if (type === \"subSec\") {\n      secondsLeft -= 1;\n      console.log(\"seconds Left:\", secondsLeft);\n    }\n\n    let [newMinutesLeft, newSecondsLeft] = [\"\", \"\"];\n    if (minutesLeft < 10) {\n      newMinutesLeft = `0${minutesLeft}`;\n    } else {\n      newMinutesLeft = `${minutesLeft}`;\n    }\n\n    if (secondsLeft === -1) {\n      newMinutesLeft = minutesLeft - 1;\n      newSecondsLeft = 59;\n    } else if (secondsLeft < 10) {\n      newSecondsLeft = `0${secondsLeft}`;\n    } else {\n      newSecondsLeft = `${secondsLeft}`;\n    }\n    timeLeft = `${newMinutesLeft}:${newSecondsLeft}`;\n    return timeLeft;\n  }\n\n  return state.timeLeft;\n};\n\nconst pomodoroReducer = (state = initialState, action) => {\n  console.log(state);\n  switch (action.type) {\n    case INCREMENT: {\n      console.log(`Increment ${action.payload}`);\n      if (state[action.payload] < 60) {\n        let newTime = state[action.payload] + 1;\n        let timeLeft = updateTimeLeft(\"addMin\", action.payload, state);\n        if (action.payload === \"focusTime\") {\n          return {\n            ...state,\n            focusTime: newTime,\n            timeLeft,\n          };\n        }\n        return {\n          ...state,\n          breakTime: newTime,\n          timeLeft,\n        };\n      }\n      return { ...state };\n    }\n    case DECREMENT: {\n      console.log(`Decrement ${action.payload}`);\n      if (state[action.payload] > 1) {\n        let newTime = state[action.payload] - 1;\n        let timeLeft = updateTimeLeft(\"subMin\", action.payload, state);\n        if (action.payload === \"focusTime\") {\n          return {\n            ...state,\n            focusTime: newTime,\n            timeLeft,\n          };\n        }\n        return {\n          ...state,\n          breakTime: newTime,\n          timeLeft,\n        };\n      }\n      return { ...state };\n    }\n    case START_TIMER: {\n      console.log(`Start timer for ${state.timeBlock}!`);\n      let timerSelector = action.timerSelector;\n      return {\n        ...state,\n        started: true,\n        timerSelector,\n      };\n    }\n    case STOP_TIMER:\n      console.log(`Stop timer for ${state.timeBlock}`);\n      return { ...state, started: false };\n    case TICK_TOCK: {\n      console.log(`Tick tock ${action.payload}`);\n      let timeBlock = state.timeBlock;\n      let timeLeft = updateTimeLeft(\"subSec\", timeBlock, state);\n      if (state.timeLeft === \"00:01\") {\n        console.log(`TIME TO SWITCH ${state.timeLeft}`);\n        timeBlock = state.timeBlock === \"focusTime\" ? \"breakTime\" : \"focusTime\"; // update to next timeBlock\n      }\n      return { ...state, timeBlock, timeLeft };\n    }\n    case RESET: {\n      console.log(`Reset timer for ${state.timeBlock}!`);\n      return {\n        ...state,\n        started: false,\n        breakTime: 5,\n        focusTime: 25,\n        timeBlock: \"focusTime\",\n        timeLeft: \"25:00\",\n      };\n    }\n    default: {\n      console.log(`Default`);\n      return { ...state };\n    }\n  }\n};\n\nexport default pomodoroReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport pomodoroReducer from \"./reducers\";\n\nexport default createStore(pomodoroReducer, applyMiddleware(thunk));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}